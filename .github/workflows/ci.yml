name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Set up environment variables
      run: |
        echo "DEV_MODE=1" >> $GITHUB_ENV
        echo "GOOGLE_API_KEY=dummy-key-for-testing" >> $GITHUB_ENV
        echo "GOOGLE_APPLICATION_CREDENTIALS=dummy-credentials" >> $GITHUB_ENV
        echo "MAX_TOKENS_PER_DAY=4096" >> $GITHUB_ENV
        echo "LOG_RETENTION_DAYS=3" >> $GITHUB_ENV
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=60
      env:
        DEV_MODE: 1
        GOOGLE_API_KEY: dummy-key-for-testing
        GOOGLE_APPLICATION_CREDENTIALS: dummy-credentials
        MAX_TOKENS_PER_DAY: 4096
        LOG_RETENTION_DAYS: 3
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Test with different Python versions
      run: |
        echo "Testing with Python ${{ matrix.python-version }}"
        python --version
        pytest --version 